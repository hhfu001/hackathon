#!/usr/bin/env node
var debug = require('debug')('hackathon');
var app = require('../app');
var _ = require('underscore');
app.set('port', process.env.PORT || 3000);
var server = app.listen(app.get('port'), function () {
    debug('Express server listening on port ' + server.address().port);
});
var io = require('socket.io')(server);
io.on('connection', function (socket) {
    var sockets = this.sockets;
    socket.emit('news');
    socket.on('screen', function () {
        this.signed = false;
        this.TYPE = 'screen';
        this.emit('usable', {id: socket.id});
    });
    socket.on('device', function (data) {
        var screenSocket = _.find(sockets, function (s) {
            return s.id == data.id
        });
        if (screenSocket && !screenSocket.signed) {
            screenSocket.signed = true;
            screenSocket.signedId = this.id;
            this.TYPE = 'device';
            this.emit('connect success');
            screenSocket.emit('connect success');
        } else {
            this.emit('signed');
        }
    });
    socket.on('action', function (data) {
        var screenSocket = _.find(sockets, function (s) {
            return s.id == data.id
        });
        if (screenSocket) {
            screenSocket.emit('action', data.action);
        }
    });
    socket.on('disconnect', function () {
        var deviceID = this.id;
        if (this.TYPE == 'device') {
            var screenSocket = _.find(sockets, function (s) {
                return s.signedId == deviceID;
            });
            screenSocket.signed = false;
            screenSocket.emit('usable', {id: screenSocket.id});
        }
    });
});